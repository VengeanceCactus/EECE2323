module eightbit_alu(input [7:0]a,
                    input [7:0]b,
                    input [2:0]sel,
                    output reg [7:0]f,
                    output reg ovf,
                    output reg take_branch);
    always @(sel, a, b)
    begin
        ovf = 0;
        take_branch = 0;
        case(sel)
            3'b000: begin
                f = a + b;
                ovf = (a[7]^f[7]) & (b[7]^f[7]);
                end
            3'b001: f = ~b;
            3'b010: f = a & b;
            3'b011: f = a | b;
            3'b100: f = a >>> 1;
            3'b101: f = a << 1;
            3:b110: begin
                if(a ==b)
                    f = 1;
                else
                    f = 0;
                end;
            3:b111: begin
                if(a! = b)
                    f = 1;
                else
                    f = 0;
                end;
        endcase
    end
endmodule
